@model Tasks.WebClient.Models.InputModels.MyTaskInputModel


@{
    ViewBag.Title = "AddTask";


    var coll = new List<Tasks.WebClient.Models.InputModels.SubTaskInputModel>();
}

<div class="well bs-component">

    @using (Html.BeginForm("Create", "Tasks", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        <fieldset>
            <legend>Add new Task</legend>
            @Html.AntiForgeryToken()
            @Html.ValidationSummary("", new { @class = "error-messages" })

            <div class="row">

                <div class="col-md-6 tasks-inps">
                    <div class="form-group col-md-7 ">
                        @Html.LabelFor(x => x.Title, new { @class = "control-label" })
                        @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
                        <div class="error-messages">
                            @Html.ValidationMessageFor(x => x.Title)
                        </div>

                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(x => x.Priority, new { @class = "control-label" })
                            <div>
                                @Html.EnumDropDownListFor(x => x.Priority, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-6">
                            @Html.LabelFor(x => x.DateToEnd)
                            @Html.EditorFor(x => x.DateToEnd)
                            <div class="error-messages">
                                @Html.ValidationMessageFor(x => x.DateToEnd)
                            </div>
                        </div>

                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(x => x.Description, new { @class = "control-label" })
                            <div>
                                @Html.TextAreaFor(x => x.Description, new { @class = "form-control" })
                                <input type="submit" id="add-tasks-btn" value="Create task" class="btn btn-block btn-primary text-center" />
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div id="subtasksBtn">
                        <span class="btn btn-danger" id="btn-addSubtassks">Add subtask form</span>
                    </div>

                    <div id="sobtasksInputs"></div>
                </div>
            </div>
        </fieldset>
    }
</div>

@section Scripts {


    @Scripts.Render("~/bundles/additional")
    @Scripts.Render("~/bundles/jqueryval")

}
